behavioralSerialDeviceRemote.swift
	var state = DeviceState()
	init()
	internal func serialDataAvailable(deviceOfInterest: NSUUID, data: String)
	internal func setBackgroundConnection(allow: Bool)
	internal func getRxBufferChar(deviceOfInterest: NSUUID)
	internal func clearRxBuffer(deviceOfInterest: NSUUID)
	internal class RemoteCentral: RemoteBehavioralSerialDevice
	internal class RemotePeripheral: RemoteBehavioralSerialDevice
	class RemoteBluetoothCentral: RemotePeripheral
	class RemoteBluetoothLECentral: RemotePeripheral
	class RemoteBluetoothPeripheral: RemotePeripheral
	class RemoteBluetoothLEPeripheral: RemotePeripheral
behavioralSerialDeviceLocal.swift
	@objc protocol LocalBehavioralSerialDeviceDelegate
	optional func searchTimerExpired()
	optional func deviceStatusChanged(nsuuidOfDevice: NSUUID, deviceState: Int)
	optional func connectedToDevice()
	var delegate:LocalBehavioralSerialDeviceDelegate? = nil
	override init()
	func getdiscoveredDeviceDictionary()->Dictionary<NSUUID, CBPeripheral>
	func getNumberOfDiscoveredDevices()->Int
	func getDeviceListAsArray()->Array<NSUUID>
	func getDeviceName(deviceOfInterest: NSUUID)->String
	func getDeviceUUIDAsString(deviceOfInterest: NSUUID)->String
	func getDeviceRSSI(deviceOfInterest: NSUUID)->Int
	func getAdvDeviceConnectable(deviceOfInterest: NSUUID)->Bool
	func getAdvDeviceName(deviceOfInterest: NSUUID)->String
	func getAdvDeviceManufactureData(deviceOfInterest: NSUUID)->String
	func getAdvDeviceServiceData(deviceOfInterest: NSUUID) -> Array<String>
	func getAdvDeviceServiceUUIDasNSArray(deviceOfInterest: NSUUID)->NSArray
	func getAdvTxPowerLevel(deviceOfInterest: NSUUID)->Int
	func getAdvSolicitedUUID(deviceOfInterest: NSUUID)->NSArray?
	func getSortedArraysBasedOnRSSI()-> (nsuuids: Array<NSUUID>, rssies: Array<NSNumber>)
	func getDeviceState()->Int
	func searchTimerExpire()
	func connectToDevice(deviceNSUUID: NSUUID) -> Bool
	func alreadyConnected(deviceNSUUID: NSUUID) -> Bool
	func clearDiscoveredDevices()
	func clearDiscoveredDevicesAdvertisementData()
	func clearConnectedDevices()
	func reconnectTimerExpired()
	func printDiscoveredDeviceListInfo()
	func printConnectedDevices()
	internal class LocalCentral: LocalBehavioralSerialDevice
	internal class LocalPeripheral: LocalBehavioralSerialDevice
	class LocalBluetoothCentral: LocalPeripheral
	var conectedPeripherals: RemoteBluetoothLEPeripheral?
	func centralManager(central: CBCentralManager, didDiscoverPeripheral peripheral: CBPeripheral, advertisementData: [String : AnyObject], RSSI: NSNumber)
	func centralManager(central: CBCentralManager, didConnectPeripheral peripheral: CBPeripheral)
	func peripheral(peripheral: CBPeripheral, didDiscoverServices error: NSError?)
	func peripheral(peripheral: CBPeripheral, didDiscoverCharacteristicsForService service: CBService, error: NSError?)
	func peripheral(peripheral: CBPeripheral, didDiscoverDescriptorsForCharacteristic characteristic: CBCharacteristic, error: NSError?)
	func centralManager(central: CBCentralManager, didFailToConnectPeripheral peripheral: CBPeripheral, error: NSError?)
	func search(timeoutSecs: NSTimeInterval)
	func connectToDevice(serviceOfInterest: CBService, characteristicOfInterest: CBCharacteristic)
	func centralManager(central: CBCentralManager, didDisconnectPeripheral peripheral: CBPeripheral, error: NSError?)
	func disconnectFromPeriphera(deviceOfInterest: NSUUID)->Bool
	class LocalBluetoothPeripheral: LocalPeripheral
	class LocalBluetoothLEPeripheral: LocalPeripheral
